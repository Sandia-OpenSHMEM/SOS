.TH SHMEM_TEAM_SPLIT_STRIDED 3 "Open Source Software Solutions, Inc." "OpenSHMEM Library Documentation"
./ sectionStart
.SH NAME
shmem_team_split_strided \- 
Create a new OpenSHMEM team from a subset of the existing parent team PEs,
where the subset is defined by the
PE triplet (
.I start
, 
.I stride
, and 
.I size
) supplied to the routine.
./ sectionEnd


./ sectionStart
.SH   SYNOPSIS
./ sectionEnd

./ sectionStart
.SS C/C++:

.B int
.B shmem\_team\_split\_strided(shmem_team_t
.IB "parent_team" ,
.B int
.IB "start" ,
.B int
.IB "stride" ,
.B int
.IB "size" ,
.B const
.I shmem_team_config_t
.IB "*config" ,
.B long
.IB "config_mask" ,
.I shmem_team_t
.I *new_team
.B );



./ sectionEnd




./ sectionStart

.SH DESCRIPTION
.SS Arguments
.BR "IN " -
.I parent\_team
- An OpenSHMEM team.



.BR "IN " -
.I start
- The lowest PE number of the subset of PEs from
the parent team that will form the new team.



.BR "IN " -
.I stride
- The stride between team PE
numbers in the parent team that comprise the subset of PEs that will form
the new team.



.BR "IN " -
.I size
- The number of PEs from the parent team in the subset
of PEs that will form the new team. 
.I size
must be a positive integer.



.BR "IN " -
.I config
- 
A pointer to the configuration parameters for the new team.



.BR "IN " -
.I config\_mask
- 
The bitwise mask representing the set of configuration parameters to use
from 
.IR "config" .




.BR "OUT " -
.I new\_team
- An OpenSHMEM team handle. Upon successful creation, it
references an OpenSHMEM team that contains the subset of all PEs in the
parent team specified by the PE triplet provided.
./ sectionEnd


./ sectionStart

.SS API Description

The 
.B shmem\_team\_split\_strided
routine is a collective routine.
It creates a new OpenSHMEM team from an existing parent team,
where the PE subset of the resulting team is defined by the triplet of arguments
(
.I start
, 
.I stride
, 
.I size
).
A valid triplet is one such that:

start + stride * i is in Z{N-1} forall i \in Z{size-1}

where Z{n} is the set of natural numbers (0, 1, ..., n), N is the
number of PEs in the parent team and size is a positive number indicating
the number of PEs in the new team. The index i specifies the number of
the given PE in the new team. Thus, PEs in the new team remain in the same
relative order as in the parent team.

This routine must be called by all PEs in the parent team.
All PEs must provide the same values for the PE triplet.
On successful creation of the new team:


.IP


\(bu The 
.I new\_team
handle will reference a valid team for the
subset of PEs in the parent team that are members of the new team.

\(bu Those PEs in the parent team that are not members of the new team
will have 
.I new\_team
assigned to SHMEM\_TEAM\_INVALID.

\(bu 
.B shmem\_team\_split\_strided
will return zero to all
PEs in the parent team.

.RS -1

If the new team cannot be created or an invalid PE triplet is provided,
then 
.I new\_team
will be assigned the value SHMEM\_TEAM\_INVALID and
.B shmem\_team\_split\_strided
will return a nonzero value on all
PEs in the parent team.

The 
.I config
argument specifies team configuration parameters, which are
described in
.B shmem_team_config_t.

The 
.I config\_mask
argument is a bitwise mask representing the set of
configuration parameters to use from 
.IR "config" .
A 
.I config\_mask
value of 0 indicates that the team
should be created with the default values for all configuration parameters.
See
.B shmem_team_config_t
for field mask names and
default configuration parameters.

If 
.I parent\_team
compares equal to SHMEM\_TEAM\_INVALID, then no new team
will be created and 
.I new\_team
will be assigned the value
SHMEM\_TEAM\_INVALID. If 
.I parent\_team
is otherwise invalid, the behavior is undefined.

./ sectionEnd


./ sectionStart

.SS Return Values

Zero on successful creation of 
.I new\_team
; otherwise, nonzero.

./ sectionEnd


./ sectionStart

.SS API Notes

The 
.B shmem\_team\_split\_strided
operation uses an arbitrary
.I stride
argument, whereas the 
.I logPE\_stride
argument to the
active set collective operations only permits strides that are a power of two.
Arbitrary strides allow a greater number of PE subsets to be expressed
and can support a broader range of usage models.

See the description of team handles and predefined teams
for more information about team handle semantics and usage.

./ sectionEnd



./ sectionStart
.SS Examples



The following example demonstrates the use of strided split in a
C11 program. The program creates a new team of all even number
PEs from the world team, then retrieves the PE number and
team size on all PEs that are members of the new team.

.nf
#include <shmem.h>
#include <stdio.h>

int main(void) {
 shmem_team_t new_team;
 shmem_team_config_t *config;

 shmem_init();
 config = NULL;
 int mype = shmem_my_pe();
 int npes = shmem_n_pes();

 shmem_team_split_strided(SHMEM_TEAM_WORLD, 0, 2, npes / 2, config, 0, &new_team);

 if (new_team != SHMEM_TEAM_INVALID) {
   int team_npes = shmem_team_n_pes(new_team);
   int team_mype = shmem_team_my_pe(new_team);

   if ((mype % 2 != 0) || (mype / 2 != team_mype) || (npes / 2 != team_npes)) {
     shmem_global_exit(1);
   }
 }

 shmem_finalize();
 return 0;
}
.fi





