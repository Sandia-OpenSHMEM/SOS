.TH SHMEM_ATOMIC_ADD 3 "Open Source Software Solutions, Inc.""OpenSHEMEM Library Documentation"
./ sectionStart
.SH NAME
shmem_atomic_add \- 
Performs an atomic add operation on a remote symmetric data object.

./ sectionEnd


./ sectionStart
.SH   SYNOPSIS
./ sectionEnd

./ sectionStart
.SS C11:

.B void
.B shmem_atomic_add(TYPE
.IB "*dest" ,
.B TYPE
.IB "value" ,
.B int
.I pe
.B );



./ sectionEnd


where TYPE is one of the standard AMO types specified by
Table 2.
./ sectionStart
.SS C/C++:

.B void
.B shmem_<TYPENAME>_atomic_add(TYPE
.IB "*dest" ,
.B TYPE
.IB "value" ,
.B int
.I pe
.B );



./ sectionEnd


where TYPE is one of the standard AMO types and has a corresponding
TYPENAME specified by Table 2.
./ sectionStart
.SS Fortran:

.nf

.BR "INTEGER " "pe"
.BR "INTEGER*4 " "value_i4"
.BR "CALL " "SHMEM_INT4_ADD(dest, value_i4, pe)"
.BR "INTEGER*8 " "value_i8"
.BR "CALL " "SHMEM_INT8_ADD(dest, value_i8, pe)"

.fi

./ sectionEnd




./ sectionStart

.SH DESCRIPTION
.SS Arguments
.BR "OUT " -
.I dest
- The remotely accessible integer data object to be
updated on the remote PE. If you are using  C/C++, the type of
.I "dest"
should match that implied in the SYNOPSIS section.


.BR "IN " -
.I value
- The value to be atomically added to 
.IR "dest" .
If you
are using  C/C++, the type of 
.I value
should match that implied in
the SYNOPSIS section. If you are using Fortran, it must be of type
integer with an element size of 
.IR "dest" .



.BR "IN " -
.I pe
- An integer that indicates the PE number upon which
.I "dest"
is to be updated. If you are using Fortran, it must be a default
integer value.
./ sectionEnd


./ sectionStart

.SS API Description

The 
.B shmem\_atomic\_add
routine performs an atomic add operation. It adds
.I value
to 
.I "dest"
on PE 
.I pe
and atomically updates the 
.I "dest"
without returning the value.

./ sectionEnd



./ sectionStart

If you are using Fortran, 
.I dest
must be of the following type:

.TP 25
Routine
Data type of 
.I dest

./ sectionEnd



./ sectionStart
.TP 25
SHMEM\_INT4\_ADD
4-byte integer
./ sectionEnd


./ sectionStart
.TP 25
SHMEM\_INT8\_ADD
8-byte integer
./ sectionEnd


./ sectionStart

.SS Return Values

None.

./ sectionEnd


./ sectionStart

.SS API Notes

As of OpenSHMEM[1.4], 
.B shmem\_add
has been deprecated.
Its behavior and call signature are identical to the replacement
interface, 
.BR "shmem\_atomic\_add" .

./ sectionEnd



./ sectionStart
.SS Examples





.nf
#include <stdio.h>
#include <shmem.h>

int main(void)
{
  static int dst = 22;
  shmem_init();
  int me = shmem_my_pe();
  if (me == 1)
     shmem_atomic_add(&dst, 44, 0);
  shmem_barrier_all();
  printf("%d: dst = %d\\n", me, dst);
  shmem_finalize();
  return 0;
}
.fi





.SS Table 2:
Standard AMO Types and Names
.TP 25
.B \TYPE
.B \TYPENAME
.TP
int
int
.TP
long
long
.TP
long long
longlong
