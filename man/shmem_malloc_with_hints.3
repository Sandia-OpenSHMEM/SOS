.TH SHMEM_MALLOC_WITH_HINTS 3 "Open Source Software Solutions, Inc." "OpenSHMEM Library Documentation"
./ sectionStart
.SH NAME
shmem_malloc_with_hints \- 
Collective memory allocation routine with support for providing hints.
./ sectionEnd
./ sectionStart
.SH   SYNOPSIS
./ sectionEnd
./ sectionStart
.SS C/C++:
.B void
.B *shmem\_malloc\_with\_hints(size_t
.IB "size" ,
.B long
.I hints
.B );
./ sectionEnd
./ sectionStart
.SH DESCRIPTION
.SS Arguments
.BR "IN " -
.I size
- The size, in bytes, of a block to be
allocated from the symmetric heap. This argument is of type size\_t

.BR "IN " -
.I hints
- A bit array of hints provided by the user to the implementation
./ sectionEnd
./ sectionStart
.SS API Description
The 
.B shmem\_malloc\_with\_hints
routine, like 
.BR "shmem\_malloc" ,
returns a pointer to a block of at least
.I size
bytes, which shall be suitably aligned so that it may be
assigned to a pointer to any type of object. This space is allocated from
the symmetric heap (similar to 
.B shmem\_malloc
). When the 
.I size
is zero, 
the 
.B shmem\_malloc\_with\_hints
routine performs no action and returns a null pointer. 
In addition to the 
.I size
argument, the 
.I hints
argument is provided by the user. 
The 
.I hints
describes the expected manner in which the OpenSHMEM program may use the allocated memory.
The valid usage hints are described in Table 4. Multiple hints may be requested by combining them with a bitwise OR operation.
A zero option can be given if no options are requested.
The information provided by the 
.I hints
is used to optimize for performance by the implementation. 
If the implementation cannot optimize, the behavior is same as 
.BR "shmem\_malloc" .
If more than one hint is provided, the implementation will make the best effort to use one or more hints 
to optimize performance. 
The 
.B shmem\_malloc\_with\_hints
routine is provided so that multiple PEs in a program can allocate symmetric,
remotely accessible memory blocks. When no action is performed, these
routines return without performing a barrier. Otherwise, the routine will call a procedure that is semantically equivalent to 
.B shmem\_barrier\_all
on exit.
This ensures that all PEs participate in the memory allocation, and that the memory on other
PEs can be used as soon as the local PE returns. The implicit barrier performed by this routine will quiet the
default context. It is the user's responsibility to ensure that no communication operations involving the given memory block are pending on
other contexts prior to calling the 
.B shmem\_free
and 
.B shmem\_realloc
routines.
The user is also responsible for calling these routines with identical argument(s) on all
PEs; if differing 
.I size
, or 
.I hints
arguments are used, the behavior of the call
and any subsequent OpenSHMEM calls is undefined.
./ sectionEnd
./ sectionStart
.SS Return Values
The 
.B shmem\_malloc\_with\_hints
routine returns a pointer to the allocated space;
otherwise, it returns a null pointer.
./ sectionEnd
./ sectionStart
.SS API Notes
OpenSHMEM programs should allocate memory with
SHMEM\_MALLOC\_ATOMICS\_REMOTE when the majority of
operations performed on this memory are atomic operations, and origin
and target PEs of the atomic operations do not share a memory domain.
That is, symmetric objects on the target PE are not accessible using
load/store operations from the origin PE or vice versa.
./ sectionEnd
.SS Table 4
Memory usage hints
.TP 35
.B Hints
.B Usage hint
.TP
0
Behavior same as
.B shmem\_malloc
.TP
SHMEM\_MALLOC\_ATOMICS\_REMOTE
Memory used for atomic operations
.TP
SHMEM\_MALLOC\_SIGNAL\_REMOTE
Memory used for signal operations
