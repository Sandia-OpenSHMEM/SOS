.TH SHMEM_FINALIZE 3 "Open Source Software Solutions, Inc." "OpenSHMEM Library Documentation"
./ sectionStart
.SH NAME
shmem_finalize \- 
A collective operation that releases all resources used by the OpenSHMEM
library. This only terminates the OpenSHMEM portion of a program, not the
entire program.

./ sectionEnd


./ sectionStart
.SH   SYNOPSIS
./ sectionEnd

./ sectionStart
.SS C/C++:

.B void
.B shmem\_finalize(void)


./ sectionEnd




./ sectionStart

.SH DESCRIPTION
.SS Arguments
.B None.
./ sectionEnd


./ sectionStart

.SS API Description

.B shmem\_finalize
is a collective operation that ends the OpenSHMEM
portion of a program previously initialized by 
.B shmem\_init
or 
.B shmem\_init\_thread
and
releases all resources used by the OpenSHMEM library. This collective
operation requires all PEs to participate in the call. There is an
implicit global barrier in 
.B shmem\_finalize
to ensure that pending
communications are completed and that no resources are released until all
PEs have entered 
.BR "shmem\_finalize" .
This routine destroys all teams created by the OpenSHMEM program.
As a result, all shareable contexts are destroyed.
The user is
responsible for destroying all contexts with the
SHMEM\_CTX\_PRIVATE option enabled prior to calling this routine;
otherwise, the behavior is undefined.
.B shmem\_finalize
must be
the last OpenSHMEM library call encountered in the OpenSHMEM portion of a
program. A call to 
.B shmem\_finalize
will release all resources
initialized by a corresponding call to 
.B shmem\_init
or 
.BR "shmem\_init\_thread" .
All processes
that represent the PEs will still exist after the
call to 
.B shmem\_finalize
returns, but they will no longer have access
to resources that have been released.

./ sectionEnd


./ sectionStart

.SS Return Values

None.

./ sectionEnd


./ sectionStart

.SS API Notes

.B shmem\_finalize
releases all resources used by the OpenSHMEM library
including the symmetric memory heap and pointers initiated by
.BR "shmem\_ptr" .
This collective operation requires all PEs to
participate in the call, not just a subset of the PEs. The
non-OpenSHMEM portion of a program may continue after a call to
.B shmem\_finalize
by all PEs.

./ sectionEnd



./ sectionStart
.SS Examples



The following finalize example is for C11 programs:

.nf
#include <shmem.h>
#include <stdio.h>

int main(void) {
 static long x = 10101;
 long y = -1;

 shmem_init();
 int mype = shmem_my_pe();
 int npes = shmem_n_pes();

 if (mype == 0)
   y = shmem_g(&x, npes - 1);

 printf("%d: y = %ld\\n", mype, y);

 shmem_finalize();
 return 0;
}
.fi





