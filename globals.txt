init-first.c:   int __libc_argc;
init-first.c:   char **__libc_argv;
init-first.c:   int __libc_multiple_libcs;
dl-sysdep.c:   int __GI___libc_enable_secure;
dl-sysdep.c:   void *__GI___libc_stack_end;
dl-sysdep.c:   int __libc_enable_secure;
dl-sysdep.c:   int __libc_multiple_libcs;
dl-sysdep.c:   void *__libc_stack_end;
dl-sysdep.c:   void *_dl_random;
interp.c:   const char __invoke_dynamic_linker__[28];
utmp_file.c:   const struct utfuncs __libc_utmp_file_functions;
utmp_file.c:   static int file_fd;
utmp_file.c:   static off64_t file_offset;
utmp_file.c:   static _Bool file_writable;
utmp_file.c:   static struct utmp last_entry;
syslog.c:   static int LogFacility;
syslog.c:   static int LogFile;
syslog.c:   static int LogMask;
syslog.c:   static int LogStat;
syslog.c:   static const char *LogTag;
syslog.c:   static int LogType;
syslog.c:   static struct sockaddr_un SyslogAddr;
syslog.c:   static int connected;
syslog.c:   static __libc_lock_t syslog_lock;
db_info.c:   const uint32_t _thread_db_const_thread_area;
structs.def:   const uint32_t _thread_db___nptl_initial_report_events[3];
structs.def:   const uint32_t _thread_db___nptl_last_event[3];
structs.def:   const uint32_t _thread_db___nptl_nthreads[3];
structs.def:   const uint32_t _thread_db___pthread_keys[3];
structs.def:   const uint32_t _thread_db__rtld_global[3];
structs.def:   const uint32_t _thread_db_dtv_dtv[3];
structs.def:   const uint32_t _thread_db_dtv_slotinfo_gen[3];
structs.def:   const uint32_t _thread_db_dtv_slotinfo_list_len[3];
structs.def:   const uint32_t _thread_db_dtv_slotinfo_list_next[3];
structs.def:   const uint32_t _thread_db_dtv_slotinfo_list_slotinfo[3];
structs.def:   const uint32_t _thread_db_dtv_slotinfo_map[3];
structs.def:   const uint32_t _thread_db_dtv_t_counter[3];
structs.def:   const uint32_t _thread_db_dtv_t_pointer_val[3];
structs.def:   const uint32_t _thread_db_link_map_l_tls_modid[3];
structs.def:   const uint32_t _thread_db_link_map_l_tls_offset[3];
structs.def:   const uint32_t _thread_db_list_t_next[3];
structs.def:   const uint32_t _thread_db_list_t_prev[3];
structs.def:   const uint32_t _thread_db_pthread_cancelhandling[3];
structs.def:   const uint32_t _thread_db_pthread_dtvp[3];
structs.def:   const uint32_t _thread_db_pthread_eventbuf[3];
structs.def:   const uint32_t _thread_db_pthread_eventbuf_eventmask[3];
structs.def:   const uint32_t _thread_db_pthread_eventbuf_eventmask_event_bits[3];
structs.def:   const uint32_t _thread_db_pthread_key_data_data[3];
structs.def:   const uint32_t _thread_db_pthread_key_data_level2_data[3];
structs.def:   const uint32_t _thread_db_pthread_key_data_seq[3];
structs.def:   const uint32_t _thread_db_pthread_key_struct_destr[3];
structs.def:   const uint32_t _thread_db_pthread_key_struct_seq[3];
structs.def:   const uint32_t _thread_db_pthread_list[3];
structs.def:   const uint32_t _thread_db_pthread_nextevent[3];
structs.def:   const uint32_t _thread_db_pthread_pid[3];
structs.def:   const uint32_t _thread_db_pthread_report_events[3];
structs.def:   const uint32_t _thread_db_pthread_schedparam_sched_priority[3];
structs.def:   const uint32_t _thread_db_pthread_schedpolicy[3];
structs.def:   const uint32_t _thread_db_pthread_specific[3];
structs.def:   const uint32_t _thread_db_pthread_start_routine[3];
structs.def:   const uint32_t _thread_db_pthread_tid[3];
structs.def:   const uint32_t _thread_db_rtld_global__dl_tls_dtv_slotinfo_list[3];
structs.def:   const uint32_t _thread_db_sizeof_dtv_slotinfo;
structs.def:   const uint32_t _thread_db_sizeof_dtv_slotinfo_list;
structs.def:   const uint32_t _thread_db_sizeof_list_t;
structs.def:   const uint32_t _thread_db_sizeof_pthread;
structs.def:   const uint32_t _thread_db_sizeof_pthread_key_data;
structs.def:   const uint32_t _thread_db_sizeof_pthread_key_data_level2;
structs.def:   const uint32_t _thread_db_sizeof_pthread_key_struct;
structs.def:   const uint32_t _thread_db_sizeof_rtld_global;
structs.def:   const uint32_t _thread_db_sizeof_td_eventbuf_t;
structs.def:   const uint32_t _thread_db_sizeof_td_thr_events_t;
structs.def:   const uint32_t _thread_db_td_eventbuf_t_eventdata[3];
structs.def:   const uint32_t _thread_db_td_eventbuf_t_eventnum[3];
structs.def:   const uint32_t _thread_db_td_thr_events_t_event_bits[3];
getXXbyYY.c:   static char *buffer;
getXXbyYY.c:   static __libc_lock_t lock;
getXXent.c:   static char *buffer;
getXXent.c:   static __libc_lock_t lock;
getXXent_r.c:   static service_user *last_nip;
getXXent_r.c:   static __libc_lock_t lock;
getXXent_r.c:   static service_user *nip;
getXXent_r.c:   static service_user *startp;
getXXent_r.c:   static int stayopen_tmp;
allocrtsig.c:   static int current_rtmax;
allocrtsig.c:   static int current_rtmin;
strtol_l.c:   const unsigned long __strtol_ul_max_tab[35];
strtol_l.c:   const unsigned char __strtol_ul_rem_tab[35];
errlist.c:   const char * const_sys_errlist_internal[135];
errlist.c:   const int _sys_nerr_internal;
siglist.c:   const char * const__GI__sys_siglist[65];
siglist.c:   const char * const__new_sys_sigabbrev[65];
siglist.c:   const char * const__new_sys_siglist[65];
siglist.c:   const char * const_new_sys_siglist[65];
unwind-resume.c:   void (*__libgcc_s_resume)(struct _Unwind_Exception *);
unwind-resume.c:   static _Unwind_Reason_Code (*libgcc_s_personality)(int, _Unwind_Action, _Unwind_Exception_Class, 
unwind-resume.c:       struct _Unwind_Exception *, struct _Unwind_Context *);
s_modf.c:   static const double one;
s_scalbn.c:   static const double huge;
s_scalbn.c:   static const double tiny;
s_scalbn.c:   static const double two54;
s_scalbn.c:   static const double twom54;
s_frexpf.c:   static const float two25;
s_modff.c:   static const float one;
s_scalbnf.c:   static const float huge;
s_scalbnf.c:   static const float tiny;
s_scalbnf.c:   static const float two25;
s_scalbnf.c:   static const float twom25;
s_frexpl.c:   static const long double two65;
s_modfl.c:   static const long double one;
unwind-forcedunwind.c:   void (*__libgcc_s_resume)(struct _Unwind_Exception *);
unwind-forcedunwind.c:   static _Unwind_Reason_Code (*libgcc_s_forcedunwind)(struct _Unwind_Exception *, _Unwind_Stop_Fn, void *);
unwind-forcedunwind.c:   static _Unwind_Word (*libgcc_s_getcfa)(struct _Unwind_Context *);
unwind-forcedunwind.c:   static void *libgcc_s_handle;
unwind-forcedunwind.c:   static _Unwind_Reason_Code (*libgcc_s_personality)(int, _Unwind_Action, _Unwind_Exception_Class, 
unwind-forcedunwind.c:       struct _Unwind_Exception *, struct _Unwind_Context *);
gai_strerror.c:   static const struct {
gai_strerror.c:       int16_t code;
gai_strerror.c:       uint16_t idx;
gai_strerror.c:   } msgidx[17];
gai_strerror.c:   static const union msgstr_t msgstr;
getaddrinfo.c:   static const void *__elf_set___libc_subfreeres_element_fini__;
getaddrinfo.c:   static const struct addrinfo default_hints;
getaddrinfo.c:   static const struct prefixentry default_labels[8];
getaddrinfo.c:   static const struct prefixentry default_precedence[5];
getaddrinfo.c:   static const struct scopeentry default_scopes[3];
getaddrinfo.c:   static struct timespec gaiconf_mtime;
getaddrinfo.c:   static int gaiconf_reload_flag;
getaddrinfo.c:   static int gaiconf_reload_flag_ever_set;
getaddrinfo.c:   static const struct gaih_typeproto gaih_inet_typeproto[9];
getaddrinfo.c:   static const struct prefixentry *labels;
getaddrinfo.c:   static const struct gaih_servtuple nullserv;
getaddrinfo.c:   static const struct prefixentry *precedence;
getaddrinfo.c:   static const struct scopeentry *scopes;
profil.c:   static size_t nsamples;
profil.c:   static size_t pc_offset;
profil.c:   static u_int pc_scale;
profil.c:   static u_short *samples;
signal.c:   sigset_t _sigintr;
sprofil.c:   static struct region default_overflow_region;
sprofil.c:   static unsigned int overflow_counter;
sprofil.c:   static struct prof_info prof_info;
system.c:   static struct sigaction intr;
system.c:   static __libc_lock_t lock;
system.c:   static struct sigaction quit;
system.c:   static int sa_refcntr;
tempname.c:   static const char letters[63];
aio_misc.c:   pthread_cond_t __aio_new_request_notification;
aio_misc.c:   pthread_mutex_t __aio_requests_mutex;
aio_misc.c:   static const void *__elf_set___libc_subfreeres_element_free_res__;
aio_misc.c:   static struct requestlist *freelist;
aio_misc.c:   static int idle_thread_count;
aio_misc.c:   static int nthreads;
aio_misc.c:   static struct aioinit optim;
aio_misc.c:   static struct requestlist **pool;
aio_misc.c:   static size_t pool_max_size;
aio_misc.c:   static size_t pool_size;
aio_misc.c:   static struct requestlist *requests;
aio_misc.c:   static struct requestlist *runlist;
getpt.c:   const char __libc_ptyname1[17];
getpt.c:   const char __libc_ptyname2[17];
clock_gettime.c:   static hp_timing_t freq;
getlogin.c:   static char name[33];
check_pf.c:   static const void *__elf_set___libc_subfreeres_element_freecache__;
check_pf.c:   static struct cached_data *cache;
check_pf.c:   static __libc_lock_t lock;
check_pf.c:   static struct cached_data noai6ai_cached;
getsourcefilter.c:   static const struct {
getsourcefilter.c:       int sol;
getsourcefilter.c:       int af;
getsourcefilter.c:       socklen_t size;
getsourcefilter.c:   } sol_map[7];
mq_notify.c:   static int netlink_socket;
mq_notify.c:   static pthread_barrier_t notify_barrier;
mq_notify.c:   static pthread_once_t once;
ptsname.c:   static char buffer[30];
shm-directory.c:   static const void *__elf_set___libc_subfreeres_element_freeit__;
shm-directory.c:   static const char defaultdir[10];
shm-directory.c:   static struct {
shm-directory.c:       char *dir;
shm-directory.c:       size_t dirlen;
shm-directory.c:   } mountpoint;
shm-directory.c:   static pthread_once_t once;
sigstack.c:   static const char __evoke_link_warning_sigstack[77];
timer_routines.c:   struct timer *__active_timer_sigev_thread;
timer_routines.c:   pthread_mutex_t __active_timer_sigev_thread_lock;
timer_routines.c:   pthread_once_t __helper_once;
timer_routines.c:   pid_t __helper_tid;
ttyname.c:   static char *getttyname_name;
ttyname.c:   static char *ttyname_buf;
elision-conf.c:   struct elision_config __elision_aconf;
elision-conf.c:   int __elision_available;
elision-conf.c:   int __pthread_force_elision;
elision-conf.c:   void (* const__pthread_init_array[1])(int, char **, char **);
brk.c:   void *__curbrk;
init-first.c:   long (*__vdso_clock_gettime)(clockid_t, struct timespec *);
init-first.c:   long (*__vdso_getcpu)(unsigned int *, unsigned int *, void *);
                                              :
timer_c:   timer_t __compat_timer_list[256];
ftw.c:   static const int ftw_arr[7];
ftw.c:   static const int nftw_arr[7];
backtrace.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
backtrace.c:   static void *libgcc_handle;
backtrace.c:   static _Unwind_Reason_Code (*unwind_backtrace)(_Unwind_Trace_Fn, void *);
backtrace.c:   static _Unwind_Word (*unwind_getcfa)(struct _Unwind_Context *);
backtrace.c:   static _Unwind_Ptr (*unwind_getip)(struct _Unwind_Context *);
cacheinfo.c:   long __x86_data_cache_size;
cacheinfo.c:   long __x86_data_cache_size_half;
cacheinfo.c:   int __x86_prefetchw;
cacheinfo.c:   long __x86_raw_data_cache_size;
cacheinfo.c:   long __x86_raw_data_cache_size_half;
cacheinfo.c:   long __x86_raw_shared_cache_size;
cacheinfo.c:   long __x86_raw_shared_cache_size_half;
cacheinfo.c:   long __x86_shared_cache_size;
cacheinfo.c:   long __x86_shared_cache_size_half;
cacheinfo.c:   static const struct intel_02_cache_info intel_02_known[68];
varshift.c:   const int8_t ___m128i_shift_right[31];
errlist-compat.c:   const int ___sys_nerr_GLIBC_2_1;
errlist-compat.c:   const int ___sys_nerr_GLIBC_2_3;
errlist-compat.c:   const int ___sys_nerr_GLIBC_2_4;
errlist-compat.c:   const char * const__sys_errlist_internal[135];
errlist-compat.c:   const int __sys_nerr_GLIBC_2_1;
errlist-compat.c:   const int __sys_nerr_GLIBC_2_3;
errlist-compat.c:   const int __sys_nerr_GLIBC_2_4;
errlist-compat.c:   const int __sys_nerr_internal;
errlist-compat.c:   static const char __evoke_link_warning_sys_errlist[68];
errlist-compat.c:   static const char __evoke_link_warning_sys_nerr[65];
C-address.c:   const struct __locale_data _nl_C_LC_ADDRESS;
C-collate.c:   const struct __locale_data _nl_C_LC_COLLATE;
C-collate.c:   static const char collseqmb[256];
C-collate.c:   static const uint32_t collseqwc[263];
C-ctype.c:   const struct __locale_data _nl_C_LC_CTYPE;
C-ctype.c:   const char _nl_C_LC_CTYPE_class[768];
C-ctype.c:   const char _nl_C_LC_CTYPE_class32[1024];
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[4];
C-ctype.c:   } _nl_C_LC_CTYPE_class_alnum;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[2];
C-ctype.c:       uint32_t level3[2];
C-ctype.c:   } _nl_C_LC_CTYPE_class_alpha;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[2];
C-ctype.c:   } _nl_C_LC_CTYPE_class_blank;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[4];
C-ctype.c:   } _nl_C_LC_CTYPE_class_cntrl;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[2];
C-ctype.c:   } _nl_C_LC_CTYPE_class_digit;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[4];
C-ctype.c:   } _nl_C_LC_CTYPE_class_graph;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[2];
C-ctype.c:       uint32_t level3[2];
C-ctype.c:   } _nl_C_LC_CTYPE_class_lower;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[4];
C-ctype.c:   } _nl_C_LC_CTYPE_class_print;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[4];
C-ctype.c:   } _nl_C_LC_CTYPE_class_punct;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[2];
C-ctype.c:   } _nl_C_LC_CTYPE_class_space;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[2];
C-ctype.c:       uint32_t level3[2];
C-ctype.c:   } _nl_C_LC_CTYPE_class_upper;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t isctype_data[8];
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[1];
C-ctype.c:       uint32_t level3[4];
C-ctype.c:   } _nl_C_LC_CTYPE_class_xdigit;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[4];
C-ctype.c:       int32_t level3[32];
C-ctype.c:   } _nl_C_LC_CTYPE_map_tolower;
C-ctype.c:   const struct {
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[4];
C-ctype.c:       int32_t level3[32];
C-ctype.c:   } _nl_C_LC_CTYPE_map_toupper;
C-ctype.c:   const uint32_t _nl_C_LC_CTYPE_tolower[384];
C-ctype.c:   const uint32_t _nl_C_LC_CTYPE_toupper[384];
C-ctype.c:   const struct {
C-ctype.c:       uint32_t header[5];
C-ctype.c:       uint32_t level1[1];
C-ctype.c:       uint32_t level2[8];
C-ctype.c:       int8_t level3[33];
C-ctype.c:   } _nl_C_LC_CTYPE_width;
C-identification.c:   const struct __locale_data _nl_C_LC_IDENTIFICATION;
C-measurement.c:   const struct __locale_data _nl_C_LC_MEASUREMENT;
C-messages.c:   const struct __locale_data _nl_C_LC_MESSAGES;
C-monetary.c:   const struct __locale_data _nl_C_LC_MONETARY;
C-monetary.c:   static const uint32_t conversion_rate[2];
C-monetary.c:   static const char not_available[2];
C-name.c:   const struct __locale_data _nl_C_LC_NAME;
C-numeric.c:   const struct __locale_data _nl_C_LC_NUMERIC;
C-paper.c:   const struct __locale_data _nl_C_LC_PAPER;
C-telephone.c:   const struct __locale_data _nl_C_LC_TELEPHONE;
C-time.c:   const struct __locale_data _nl_C_LC_TIME;
C-translit.h:   static const uint32_t translit_from_idx[1353];
C-translit.h:   static const wchar_t translit_from_tbl[2706];
C-translit.h:   static const uint32_t translit_to_idx[1353];
C-translit.h:   static const wchar_t translit_to_tbl[4797];
C_name.c:   const char _nl_C_codeset[15];
C_name.c:   const char _nl_C_name[2];
C_name.c:   const char _nl_POSIX_name[6];
SYS_libc.c:   const char __GI__libc_intl_domainname[5];
SYS_libc.c:   const char _libc_intl_domainname[5];
XXX-lookup.c:   service_user *__nss_aliases_database;
XXX-lookup.c:   service_user *__nss_ethers_database;
XXX-lookup.c:   service_user *__nss_group_database;
XXX-lookup.c:   service_user *__nss_gshadow_database;
XXX-lookup.c:   service_user *__nss_hosts_database;
XXX-lookup.c:   service_user *__nss_netgroup_database;
XXX-lookup.c:   service_user *__nss_networks_database;
XXX-lookup.c:   service_user *__nss_passwd_database;
XXX-lookup.c:   service_user *__nss_protocols_database;
XXX-lookup.c:   service_user *__nss_publickey_database;
XXX-lookup.c:   service_user *__nss_rpc_database;
XXX-lookup.c:   service_user *__nss_services_database;
XXX-lookup.c:   service_user *__nss_shadow_database;
a64l.c:   static const char a64l_table[77];
abort.c:   struct abort_msg_s *__GI___abort_msg;
abort.c:   struct abort_msg_s *__abort_msg;
abort.c:   static __libc_lock_recursive_t lock;
abort.c:   static int stage;
allocatestack.c:   list_t __GI___stack_user;
allocatestack.c:   list_t __stack_user;
allocatestack.c:   static uintptr_t in_flight_stack;
allocatestack.c:   static list_t stack_cache;
allocatestack.c:   static size_t stack_cache_actsize;
allocatestack.c:   static int stack_cache_lock;
allocatestack.c:   static const size_t stack_cache_maxsize;
allocatestack.c:   static list_t stack_used;
arena.c:   int __libc_malloc_initialized;
arena.c:   static const void *__elf_set___libc_thread_subfreeres_element_arena_thread_freeres__;
arena.c:   static char *aligned_heap_area;
arena.c:   static unsigned long arena_mem;
arena.c:   static struct fork_handler atfork_mem;
arena.c:   static unsigned int atfork_recursive_cntr;
arena.c:   static mstate free_list;
arena.c:   static mutex_t free_list_lock;
arena.c:   static mutex_t list_lock;
arena.c:   static size_t narenas;
arena.c:   static void *save_arena;
arena.c:   static void (*save_free_hook)(void *, const void *);
arena.c:   static void *(*save_malloc_hook)(size_t, const void *);
arena.c:   static mstate thread_arena;
argp-ba.c:   const char *argp_program_bug_address;
argp-eexst.c:   error_t argp_err_exit_status;
argp-help.c:   static const struct uparam_name uparam_names[9];
argp-help.c:   static struct uparams uparams;
argp-parse.c:   static volatile int _argp_hang;
argp-parse.c:   static const struct argp argp_default_argp;
argp-parse.c:   static const struct argp_option argp_default_options[5];
argp-parse.c:   static const struct argp argp_version_argp;
argp-parse.c:   static const struct argp_option argp_version_options[2];
argp-pv.c:   const char *argp_program_version;
argp-pvh.c:   void (*argp_program_version_hook)(FILE * restrict, struct argp_state * restrict);
asctime.c:   static const char format[32];
asctime.c:   static char result[114];
auth_des.c:   static const struct auth_ops authdes_ops;
auth_none.c:   static struct authnone_private_s authnone_private;
auth_none.c:   static pthread_once_t authnone_private_guard;
auth_none.c:   static const struct auth_ops ops;
auth_unix.c:   static const struct auth_ops auth_unix_ops;
bindrsvprt.c:   static int blacklist_read;
bindrsvprt.c:   static int *list;
bindrsvprt.c:   static int list_size;
bindrsvprt.c:   static __libc_lock_t lock;
c16rtomb.c:   static mbstate_t state;
categories.def:   static const enum value_type _nl_value_type_LC_ADDRESS[13];
categories.def:   static const enum value_type _nl_value_type_LC_COLLATE[19];
categories.def:   static const enum value_type _nl_value_type_LC_CTYPE[72];
categories.def:   static const enum value_type _nl_value_type_LC_IDENTIFICATION[16];
categories.def:   static const enum value_type _nl_value_type_LC_MEASUREMENT[2];
categories.def:   static const enum value_type _nl_value_type_LC_MESSAGES[5];
categories.def:   static const enum value_type _nl_value_type_LC_MONETARY[46];
categories.def:   static const enum value_type _nl_value_type_LC_NAME[7];
categories.def:   static const enum value_type _nl_value_type_LC_NUMERIC[6];
categories.def:   static const enum value_type _nl_value_type_LC_PAPER[3];
categories.def:   static const enum value_type _nl_value_type_LC_TELEPHONE[5];
categories.def:   static const enum value_type _nl_value_type_LC_TIME[111];
cfsetspeed.c:   static const struct speed_struct speeds[32];
clnt_perr.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
clnt_perr.c:   static const struct auth_errtab auth_errlist[8];
clnt_perr.c:   static const char auth_errstr[198];
clnt_perr.c:   static const struct rpc_errtab rpc_errlist[18];
clnt_perr.c:   static const char rpc_errstr[451];
clnt_raw.c:   static const struct clnt_ops client_ops;
clnt_tcp.c:   static const struct clnt_ops tcp_ops;
clnt_udp.c:   static const struct clnt_ops udp_ops;
clnt_unix.c:   static const struct clnt_ops unix_ops;
collectives.c:   char *coll_type_str[6];
collectives.c:   long *shmem_internal_barrier_all_psync;
collectives.c:   coll_type_t shmem_internal_barrier_type;
collectives.c:   coll_type_t shmem_internal_bcast_type;
collectives.c:   coll_type_t shmem_internal_collect_type;
collectives.c:   coll_type_t shmem_internal_fcollect_type;
collectives.c:   coll_type_t shmem_internal_reduce_type;
collectives.c:   int shmem_internal_tree_crossover;
collectives.c:   static int *full_tree_children;
collectives.c:   static int full_tree_num_children;
collectives.c:   static int full_tree_parent;
collectives.c:   static int tree_radix;
create_xid.c:   static struct drand48_data __rpc_lrand48_data;
create_xid.c:   static __libc_lock_t createxid_lock;
create_xid.c:   static pid_t is_initialized;
ctype-info.c:   const __uint32_t *__ctype32_b;
ctype-info.c:   const __uint32_t *__ctype32_tolower;
ctype-info.c:   const __uint32_t *__ctype32_toupper;
ctype-info.c:   const unsigned short *__ctype_b;
ctype-info.c:   const __int32_t *__ctype_tolower;
ctype-info.c:   const __int32_t *__ctype_toupper;
ctype-info.c:   const uint16_t *__libc_tsd_CTYPE_B;
ctype-info.c:   const int32_t *__libc_tsd_CTYPE_TOLOWER;
ctype-info.c:   const int32_t *__libc_tsd_CTYPE_TOUPPER;
cxa_at_quick_exit.c:   struct exit_function_list *__quick_exit_funcs;
cxa_at_quick_exit.c:   static struct exit_function_list initial_quick;
cxa_atexit.c:   struct exit_function_list *__exit_funcs;
cxa_atexit.c:   uint64_t __new_exitfn_called;
cxa_atexit.c:   static struct exit_function_list initial;
cxa_atexit.c:   static __libc_lock_t lock;
cxa_thread_atexit_impl.c:   static void * const dso_symbol_cache;
cxa_thread_atexit_impl.c:   static struct link_map *lm_cache;
cxa_thread_atexit_impl.c:   static struct dtor_list *tls_dtor_list;
dcigettext.c:   const char __GI__nl_default_dirname[18];
dcigettext.c:   const char *_nl_current_default_domain;
dcigettext.c:   const char _nl_default_default_domain[9];
dcigettext.c:   const char _nl_default_dirname[18];
dcigettext.c:   struct binding *_nl_domain_bindings;
dcigettext.c:   __libc_rwlock_t _nl_state_lock;
dcigettext.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
dcigettext.c:   static void *root;
dcigettext.c:   static struct transmem_list *transmem_list;
dcigettext.c:   static __libc_rwlock_t tree_lock;
des_impl.c:   static const uint32_t des_SPtrans[8][64];
des_impl.c:   static const uint32_t des_skb[8][64];
des_impl.c:   static const char shifts2[16];
des_soft.c:   static const char partab[128];
dl-cache.c:   static struct cache_file *cache;
dl-cache.c:   static struct cache_file_new *cache_new;
dl-cache.c:   static size_t cachesize;
dl-debug.c:   struct r_debug _r_debug;
dl-error.c:   static const char _dl_out_of_memory[14];
dl-error.c:   static receiver_fct receiver;
dl-libc.c:   struct dl_open_hook *__GI__dl_open_hook;
dl-libc.c:   struct dl_open_hook *_dl_open_hook;
dl-libc.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
dl-load.c:   int __stack_prot;
dl-load.c:   static const struct r_strlenpair *capstr;
dl-load.c:   static struct r_search_path_struct env_path_list;
dl-load.c:   static size_t max_capstrlen;
dl-load.c:   static size_t max_dirnamelen;
dl-load.c:   static size_t ncapstr;
dl-load.c:   static struct r_search_path_struct rtld_search_dirs;
dl-load.c:   static const char system_dirs[66];
dl-load.c:   static const size_t system_dirs_len[4];
dl-minimal.c:   const char __GI__itoa_lower_digits[16];
dl-minimal.c:   const char _itoa_lower_digits[16];
dl-minimal.c:   static void *alloc_end;
dl-minimal.c:   static void *alloc_last_block;
dl-minimal.c:   static void *alloc_ptr;
dl-profile.c:   static struct here_cg_arc_record *data;
dl-profile.c:   static volatile uint32_t fromidx;
dl-profile.c:   static uint32_t fromlimit;
dl-profile.c:   static struct here_fromstruct *froms;
dl-profile.c:   static unsigned int log_hashfraction;
dl-profile.c:   static uintptr_t lowpc;
dl-profile.c:   static uint32_t narcs;
dl-profile.c:   static volatile uint32_t *narcsp;
dl-profile.c:   static int running;
dl-profile.c:   static size_t textsize;
dl-profile.c:   static volatile uint16_t *tos;
dlerror.c:   struct dlfcn_hook *__GI__dlfcn_hook;
dlerror.c:   struct dlfcn_hook *_dlfcn_hook;
dlerror.c:   static __libc_key_t key;
dlerror.c:   static struct dl_action_result last_result;
dlerror.c:   static pthread_once_t once;
dlerror.c:   static struct dl_action_result *static_buf;
dlfcn.c:   int __dlfcn_argc;
dlfcn.c:   char **__dlfcn_argv;
dlfcn.c:   static void (* constinit_array[1])(int, char **);
drand48-iter.c:   struct drand48_data __libc_drand48_data;
dso_handle.c:   const void * const __dso_handle;
efgcvt.c:   static char ecvt_buffer[20];
efgcvt.c:   static char fcvt_buffer[20];
efgcvt.c:   static char *fcvt_bufptr;
efgcvt.c:   static char qecvt_buffer[33];
efgcvt.c:   static char qfcvt_buffer[33];
efgcvt.c:   static char *qfcvt_bufptr;
environ.c:   char **__environ;
environ.c:   char **_environ;
environ.c:   char **environ;
errno.c:   int __libc_errno;
errno.c:   int errno;
errno.c:   int rtld_errno;
error.c:   unsigned int error_message_count;
error.c:   int error_one_per_line;
error.c:   void (*error_print_progname)(void);
fgetgrent.c:   static char *buffer;
fgetgrent.c:   static __libc_lock_t lock;
fgetpwent.c:   static char *buffer;
fgetpwent.c:   static __libc_lock_t lock;
fgetsgent.c:   static char *buffer;
fgetsgent.c:   static __libc_lock_t lock;
fgetspent.c:   static char *buffer;
fgetspent.c:   static __libc_lock_t lock;
fileops.c:   const struct _IO_jump_t _IO_file_jumps;
fileops.c:   const struct _IO_jump_t _IO_file_jumps_maybe_mmap;
fileops.c:   const struct _IO_jump_t _IO_file_jumps_mmap;
fileops.c:   const struct _IO_jump_t __GI__IO_file_jumps;
finddomain.c:   static struct loaded_l10nfile *_nl_loaded_domains;
findlocale.c:   const char _nl_default_locale_path[16];
findlocale.c:   struct loaded_l10nfile *_nl_locale_file_list[13];
fmtmsg.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
fmtmsg.c:   static const struct severity_info errorsev;
fmtmsg.c:   static const struct severity_info haltsev;
fmtmsg.c:   static const struct severity_info infosev;
fmtmsg.c:   static const struct {
fmtmsg.c:       uint32_t len;
fmtmsg.c:       const char name[12];
fmtmsg.c:   } keywords[5];
fmtmsg.c:   static __libc_lock_t lock;
fmtmsg.c:   static const struct severity_info nosev;
fmtmsg.c:   static int print;
fmtmsg.c:   static struct severity_info *severity_list;
fmtmsg.c:   static const struct severity_info warningsev;
fnmatch.c:   static int posixly_correct;
forward.c:   struct pthread_functions __libc_pthread_functions;
forward.c:   int __libc_pthread_functions_init;
fpioconst.c:   const mp_limb_t __tens[1725];
fpioconst.c:   const struct mp_power _fpioconst_pow10[15];
fpu_control.c:   fpu_control_t __fpu_control;
fstab.c:   static const void *__elf_set___libc_subfreeres_element_fstab_free__;
fstab.c:   static struct fstab_state fstab_state;
gconv_builtin.c:   static const struct builtin_map map[12];
gconv_cache.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
gconv_cache.c:   static int cache_malloced;
gconv_cache.c:   static size_t cache_size;
gconv_cache.c:   static void *gconv_cache;
gconv_conf.c:   size_t __gconv_max_path_elem_len;
gconv_conf.c:   struct path_elem *__gconv_path_elem;
gconv_conf.c:   const char *__gconv_path_envvar;
gconv_conf.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
gconv_conf.c:   static const char builtin_aliases[999];
gconv_conf.c:   static struct gconv_module builtin_modules[12];
gconv_conf.c:   static const char default_gconv_path[32];
gconv_conf.c:   static const struct path_elem empty_path_elem;
gconv_conf.c:   static const char gconv_conf_filename[14];
gconv_conf.c:   static const char gconv_module_ext[4];
gconv_db.c:   void *__gconv_alias_db;
gconv_db.c:   __libc_lock_t __gconv_lock;
gconv_db.c:   struct gconv_module *__gconv_modules_db;
gconv_db.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
gconv_db.c:   static void *known_derivations;
gconv_db.c:   static pthread_once_t once;
gconv_dl.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
gconv_dl.c:   static void *loaded;
gconv_dl.c:   static struct __gconv_loaded_object *release_handle;
genops.c:   static int _IO_list_all_stamp;
genops.c:   static const void *__elf_set___libc_atexit_element__IO_cleanup__;
genops.c:   static const void *__elf_set___libc_subfreeres_element_buffer_free__;
genops.c:   static _Bool dealloc_buffers;
genops.c:   static _IO_FILE *freeres_list;
genops.c:   static _IO_lock_t list_all_lock;
genops.c:   static _IO_FILE *run_fp;
getdate.c:   int getdate_err;
getnameinfo.c:   static char *domain;
getnetgrent.c:   static char *buffer;
getnetgrent_r.c:   static struct __netgrent dataset;
getnetgrent_r.c:   static __libc_lock_t lock;
getopt.c:   char *optarg;
getopt.c:   int opterr;
getopt.c:   int optind;
getopt.c:   int optopt;
getopt.c:   static struct _getopt_data getopt_data;
getpw.c:   static const char __evoke_link_warning_getpw[58];
gets_chk.c:   static const char __evoke_link_warning___gets_chk[57];
getttyent.c:   static FILE *tf;
getttyent.c:   static char zapchar;
getusershell.c:   static char **curshell;
getusershell.c:   static const char *okshells[3];
getusershell.c:   static char **shells;
getusershell.c:   static char *strings;
getutent.c:   static struct utmp *buffer;
getutent_r.c:   const struct utfuncs *__libc_utmp_jump_table;
getutent_r.c:   __libc_lock_t __libc_utmp_lock;
getutent_r.c:   const struct utfuncs __libc_utmp_unknown_functions;
getutid.c:   static struct utmp *buffer;
getutline.c:   static struct utmp *buffer;
getwd_chk.c:   static const char __evoke_link_warning_getwd[58];
global-locale.c:   __locale_t __libc_tsd_LOCALE;
global-locale.c:   struct __locale_struct _nl_global_locale;
gmon.c:   struct __bb *__bb_head;
gmon.c:   struct gmonparam _gmonparam;
gmon.c:   static int s_scale;
herrno.c:   int __h_errno;
herrno.c:   int __libc_h_errno;
herror.c:   const char * consth_errlist[5];
herror.c:   const int h_nerr;
hooks.c:   static int disallow_malloc_check;
hooks.c:   static int using_malloc_checking;
hsearch.c:   static const void *__elf_set___libc_subfreeres_element___hdestroy__;
hsearch.c:   static struct hsearch_data htab;
idn-stub.c:   static const void *__elf_set___libc_subfreeres_element_unload_libidn__;
idn-stub.c:   static void *h;
idn-stub.c:   static int (*to_ascii_lz)(const char *, char **, int);
idn-stub.c:   static int (*to_unicode_lzlz)(const char *, char **, int);
in6_addr.c:   const struct in6_addr __GI___in6addr_any;
in6_addr.c:   const struct in6_addr __GI___in6addr_loopback;
in6_addr.c:   const struct in6_addr __GI_in6addr_any;
in6_addr.c:   const struct in6_addr __GI_in6addr_loopback;
in6_addr.c:   const struct in6_addr __in6addr_any;
in6_addr.c:   const struct in6_addr __in6addr_loopback;
in6_addr.c:   const struct in6_addr in6addr_any;
in6_addr.c:   const struct in6_addr in6addr_loopback;
inet6_option.c:   static const char __evoke_link_warning_inet6_option_alloc[60];
inet6_option.c:   static const char __evoke_link_warning_inet6_option_append[61];
inet6_option.c:   static const char __evoke_link_warning_inet6_option_find[59];
inet6_option.c:   static const char __evoke_link_warning_inet6_option_init[59];
inet6_option.c:   static const char __evoke_link_warning_inet6_option_next[59];
inet6_option.c:   static const char __evoke_link_warning_inet6_option_space[60];
inet_ntoa.c:   static char buffer[18];
init-misc.c:   char *__progname;
init-misc.c:   char *__progname_full;
init-misc.c:   char *program_invocation_name;
init-misc.c:   char *program_invocation_short_name;
init.c:   void *shmem_internal_data_base;
init.c:   long shmem_internal_data_length;
init.c:   int shmem_internal_finalized;
init.c:   int shmem_internal_global_exit_called;
init.c:   void *shmem_internal_heap_base;
init.c:   long shmem_internal_heap_length;
init.c:   int shmem_internal_initialized;
init.c:   int shmem_internal_initialized_with_start_pes;
init.c:   int shmem_internal_my_pe;
init.c:   int shmem_internal_num_pes;
init.c:   int shmem_internal_thread_level;
init.c:   static char shmem_internal_my_hostname[64];
initgroups.c:   service_user *__nss_initgroups_database;
initgroups.c:   static _Bool use_initgroups_entry;
interp.c:   const char __invoke_dynamic_linker__[28];
iofopncook.c:   static const struct _IO_jump_t _IO_cookie_jumps;
iofwide.c:   const struct _IO_codecvt __libio_codecvt;
iogets.c:   static const char __evoke_link_warning_gets[57];
iopadn.c:   static const char blanks[16];
iopadn.c:   static const char zeroes[16];
iopopen.c:   static const struct _IO_jump_t _IO_proc_jumps;
iopopen.c:   static struct _IO_proc_file *proc_file_chain;
iopopen.c:   static _IO_lock_t proc_file_chain_lock;
iowpadn.c:   static const wchar_t blanks[16];
iowpadn.c:   static const wchar_t zeroes[16];
itoa-digits.c:   const char __GI__itoa_lower_digits[36];
itoa-digits.c:   const char _itoa_lower_digits[36];
itoa-udigits.c:   const char __GI__itoa_upper_digits[36];
itoa-udigits.c:   const char _itoa_upper_digits[36];
itowa-digits.c:   const wchar_t _itowa_lower_digits[36];
itowa-digits.c:   const wchar_t _itowa_upper_digits[36];
key_call.c:   cryptkeyres *(*__key_decryptsession_pk_LOCAL)(uid_t, char *);
key_call.c:   cryptkeyres *(*__key_encryptsession_pk_LOCAL)(uid_t, char *);
key_call.c:   des_block *(*__key_gendes_LOCAL)(uid_t, char *);
key_call.c:   static __libc_lock_t keycall_lock;
key_call.c:   static const struct timeval tottimeout;
key_call.c:   static const struct timeval trytimeout;
l64a.c:   static const char conv_table[64];
lckpwdf.c:   static __libc_lock_t lock;
lckpwdf.c:   static int lock_fd;
libc_multiple_threads.c:   int __libc_multiple_threads;
libc_pthread_init.c:   unsigned long *__fork_generation_pointer;
libc_pthread_init.c:   static const void *__elf_set___libc_subfreeres_element_freeres_libptread__;
loadarchive.c:   static const char archfname[31];
loadarchive.c:   static struct stat64 archive_stat;
loadarchive.c:   static struct locale_in_archive *archloaded;
loadarchive.c:   static struct archmapped *archmapped;
loadarchive.c:   static struct archmapped headmap;
loadlocale.c:   static const size_t _nl_category_num_items[13];
loadlocale.c:   static const enum value_type * const_nl_value_types[13];
loadmsgcat.c:   int _nl_msg_cat_cntr;
localealias.c:   static __libc_lock_t lock;
localealias.c:   static struct alias_map *map;
localealias.c:   static size_t maxmap;
localealias.c:   static size_t nmap;
localealias.c:   static char *string_space;
localealias.c:   static size_t string_space_act;
localealias.c:   static size_t string_space_max;
localtime.c:   struct tm _tmbuf;
malloc.c:   void (*__after_morecore_hook)(void);
malloc.c:   void (*__free_hook)(void *, const void *);
malloc.c:   void *(*__malloc_hook)(size_t, const void *);
malloc.c:   void (*__malloc_initialize_hook)(void);
malloc.c:   void *(*__memalign_hook)(size_t, size_t, const void *);
malloc.c:   void *(*__morecore)(ptrdiff_t);
malloc.c:   void *(*__realloc_hook)(void *, size_t, const void *);
malloc.c:   static struct malloc_state _gm_;
malloc.c:   static int check_action;
malloc.c:   static size_t global_max_fast;
malloc.c:   static struct malloc_state main_arena;
malloc.c:   static struct malloc_par mp_;
malloc.c:   static struct malloc_params mparams;
malloc.c:   static int perturb_byte;
mblen.c:   static mbstate_t state;
mbrlen.c:   static mbstate_t internal;
mbrtoc16.c:   static mbstate_t state;
mbrtowc.c:   static mbstate_t state;
mbsnrtowcs.c:   static mbstate_t state;
mbsrtowcs.c:   static mbstate_t state;
mcheck.c:   static void (*abortfunc)(enum mcheck_status);
mcheck.c:   static int mcheck_used;
mcheck.c:   static void (*old_free_hook)(void *, const void *);
mcheck.c:   static void *(*old_malloc_hook)(size_t, const void *);
mcheck.c:   static void *(*old_memalign_hook)(size_t, size_t, const void *);
mcheck.c:   static void *(*old_realloc_hook)(void *, size_t, const void *);
mcheck.c:   static int pedantic;
mcheck.c:   static struct hdr *root;
memstream.c:   static const struct _IO_jump_t _IO_mem_jumps;
mktemp.c:   static const char __evoke_link_warning_mktemp[68];
mktime.c:   const unsigned short __mon_yday[2][13];
mktime.c:   static time_t localtime_offset;
mntent.c:   static char *getmntent_buffer;
mtrace.c:   void *mallwatch;
mtrace.c:   static __libc_lock_t lock;
mtrace.c:   static const char mallenv[13];
mtrace.c:   static char *malloc_trace_buffer;
mtrace.c:   static FILE *mallstream;
mtrace.c:   static void (*tr_old_free_hook)(void *, const void *);
mtrace.c:   static void *(*tr_old_malloc_hook)(size_t, const void *);
mtrace.c:   static void *(*tr_old_memalign_hook)(size_t, size_t, const void *);
mtrace.c:   static void *(*tr_old_realloc_hook)(void *, size_t, const void *);
netname.c:   static const char OPSYS[5];
nptl-init.c:   int *__libc_multiple_threads_ptr;
nptl-init.c:   size_t __static_tls_align_m1;
nptl-init.c:   size_t __static_tls_size;
nptl-init.c:   struct xid_command *__xidcmd;
nptl-init.c:   static _Bool __nptl_initial_report_events;
nptl-init.c:   static const char nptl_version[5];
nptl-init.c:   static const struct pthread_functions pthread_functions;
nscd_getgr_r.c:   struct locked_map_ptr __gr_map_handle;
nscd_getgr_r.c:   int __nss_not_use_nscd_group;
nscd_getgr_r.c:   static const void *__elf_set___libc_subfreeres_element_gr_map_free__;
nscd_gethst_r.c:   struct locked_map_ptr __hst_map_handle;
nscd_gethst_r.c:   int __nss_have_localdomain;
nscd_gethst_r.c:   int __nss_not_use_nscd_hosts;
nscd_gethst_r.c:   static const void *__elf_set___libc_subfreeres_element_hst_map_free__;
nscd_getpw_r.c:   int __nss_not_use_nscd_passwd;
nscd_getpw_r.c:   static const void *__elf_set___libc_subfreeres_element_pw_map_free__;
nscd_getpw_r.c:   static struct locked_map_ptr map_handle;
nscd_getserv_r.c:   int __nss_not_use_nscd_services;
nscd_getserv_r.c:   struct locked_map_ptr __serv_map_handle;
nscd_getserv_r.c:   static const void *__elf_set___libc_subfreeres_element_serv_map_free__;
nscd_netgroup.c:   int __nss_not_use_nscd_netgroup;
nscd_netgroup.c:   static const void *__elf_set___libc_subfreeres_element_pw_map_free__;
nscd_netgroup.c:   static struct locked_map_ptr map_handle;
nsswitch.c:   _Bool __nss_database_custom[14];
nsswitch.c:   static const void *__elf_set___libc_subfreeres_element_free_defconfig__;
nsswitch.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
nsswitch.c:   static const char * const __nss_shlib_revision;
nsswitch.c:   static const struct {
nsswitch.c:       const char name[10];
nsswitch.c:       service_user **dbp;
nsswitch.c:   } databases[14];
nsswitch.c:   static name_database_entry *defconfig_entries;
nsswitch.c:   static _Bool is_nscd;
nsswitch.c:   static __libc_lock_t lock;
nsswitch.c:   static void (*nscd_init_cb)(size_t, struct traced_file *);
nsswitch.c:   static name_database *service_table;
obprintf.c:   const struct _IO_jump_t _IO_obstack_jumps;
obstack.c:   struct obstack *_obstack_compat;
obstack.c:   void (*obstack_alloc_failed_handler)(void);
obstack.c:   int obstack_exit_failure;
pi.c:   unsigned long long inside;
pi.c:   unsigned long long total;
plural-exp.c:   const struct expression __gettext_germanic_plural;
plural-exp.c:   static const struct expression plone;
plural-exp.c:   static const struct expression plvar;
plural.c:   static const yytype_int8 yycheck[55];
plural.c:   static const yytype_uint8 yydefact[27];
plural.c:   static const yytype_int8 yydefgoto[3];
plural.c:   static const yytype_int8 yypact[27];
plural.c:   static const yytype_int8 yypgoto[3];
plural.c:   static const yytype_uint8 yyr1[14];
plural.c:   static const yytype_uint8 yyr2[14];
plural.c:   static const yytype_uint8 yystos[27];
plural.c:   static const yytype_uint8 yytable[55];
plural.c:   static const yytype_uint8 yytranslate[263];
pmap_clnt.c:   static const struct timeval timeout;
pmap_clnt.c:   static const struct timeval tottimeout;
pmap_rmt.c:   static const struct timeval timeout;
rxm_attr.c:   struct fi_domain_attr rxm_domain_attr;
rxm_attr.c:   struct fi_ep_attr rxm_ep_attr;
rxm_attr.c:   struct fi_fabric_attr rxm_fabric_attr;
rxm_attr.c:   struct fi_info rxm_info;
rxm_attr.c:   struct fi_rx_attr rxm_rx_attr;
rxm_attr.c:   struct fi_tx_attr rxm_tx_attr;
rxm_fabric.c:   static struct fi_ops rxm_fabric_fi_ops;
rxm_fabric.c:   static struct fi_ops_fabric rxm_fabric_ops;
rxm_init.c:   struct fi_provider rxm_prov;
sock_atomic.c:   struct fi_ops_atomic sock_ep_atomic;
sock_av.c:   static struct fi_ops_av sock_am_ops;
sock_av.c:   static struct fi_ops_av sock_at_ops;
sock_av.c:   static struct fi_ops sock_av_fi_ops;
sock_cntr.c:   const struct fi_cntr_attr sock_cntr_attr;
sock_cntr.c:   static struct fi_ops sock_cntr_fi_ops;
sock_cntr.c:   static struct fi_ops_cntr sock_cntr_ops;
sock_cq.c:   static const struct fi_cq_attr _sock_cq_def_attr;
sock_cq.c:   static struct fi_ops sock_cq_fi_ops;
sock_cq.c:   static struct fi_ops_cq sock_cq_ops;
sock_dom.c:   const struct fi_domain_attr sock_domain_attr;
sock_dom.c:   static struct fi_ops sock_dom_fi_ops;
sock_dom.c:   static struct fi_ops_mr sock_dom_mr_ops;
sock_dom.c:   static struct fi_ops_domain sock_dom_ops;
sock_dom.c:   static struct fi_ops sock_mr_fi_ops;
sock_ep.c:   struct fi_ops_ep sock_ctx_ep_ops;
sock_ep.c:   struct fi_ops sock_ep_fi_ops;
sock_ep.c:   struct fi_ops_ep sock_ep_ops;
sock_ep.c:   const struct fi_rx_attr sock_srx_attr;
sock_ep.c:   const struct fi_tx_attr sock_stx_attr;
sock_ep.c:   static struct fi_ops sock_ctx_ops;
sock_ep_dgram.c:   const struct fi_ep_attr sock_dgram_ep_attr;
sock_ep_dgram.c:   const struct fi_rx_attr sock_dgram_rx_attr;
sock_ep_dgram.c:   const struct fi_tx_attr sock_dgram_tx_attr;
sock_ep_msg.c:   struct fi_ops_cm sock_ep_cm_ops;
sock_ep_msg.c:   static const struct fi_ep_attr sock_msg_ep_attr;
sock_ep_msg.c:   static const struct fi_rx_attr sock_msg_rx_attr;
sock_ep_msg.c:   static const struct fi_tx_attr sock_msg_tx_attr;
sock_ep_msg.c:   static struct fi_ops_cm sock_pep_cm_ops;
sock_ep_msg.c:   static struct fi_ops sock_pep_fi_ops;
sock_ep_rdm.c:   const struct fi_ep_attr sock_rdm_ep_attr;
sock_ep_rdm.c:   const struct fi_rx_attr sock_rdm_rx_attr;
sock_ep_rdm.c:   const struct fi_tx_attr sock_rdm_tx_attr;
sock_eq.c:   static struct fi_eq_attr _sock_eq_def_attr;
sock_eq.c:   static struct fi_ops sock_eq_fi_ops;
sock_eq.c:   static struct fi_ops_eq sock_eq_ops;
sock_fabric.c:   int sock_av_def_sz;
sock_fabric.c:   int sock_cm_def_map_sz;
sock_fabric.c:   int sock_conn_retry;
sock_fabric.c:   int sock_cq_def_sz;
sock_fabric.c:   const char sock_dom_name[8];
sock_fabric.c:   int sock_eq_def_sz;
sock_fabric.c:   const char sock_fab_name[3];
sock_fabric.c:   const struct fi_fabric_attr sock_fabric_attr;
sock_fabric.c:   char *sock_pe_affinity_str;
sock_fabric.c:   int sock_pe_waittime;
sock_fabric.c:   struct fi_provider sock_prov;
sock_fabric.c:   const char sock_prov_name[8];
sock_fabric.c:   static int read_default_params;
sock_fabric.c:   static struct dlist_entry sock_dom_list;
sock_fabric.c:   static struct fi_ops sock_fab_fi_ops;
sock_fabric.c:   static struct dlist_entry sock_fab_list;
sock_fabric.c:   static struct fi_ops_fabric sock_fab_ops;
sock_fabric.c:   static pthread_spinlock_t sock_list_lock;
sock_msg.c:   struct fi_ops_msg sock_ep_msg_ops;
sock_msg.c:   struct fi_ops_tagged sock_ep_tagged;
sock_poll.c:   static struct fi_ops sock_poll_fi_ops;
sock_poll.c:   static struct fi_ops_poll sock_poll_ops;
sock_rma.c:   struct fi_ops_rma sock_ep_rma;
sock_wait.c:   static struct fi_ops sock_wait_fi_ops;
sock_wait.c:   static struct fi_ops_wait sock_wait_ops;
udpx_attr.c:   struct fi_domain_attr udpx_domain_attr;
udpx_attr.c:   struct fi_ep_attr udpx_ep_attr;
udpx_attr.c:   struct fi_fabric_attr udpx_fabric_attr;
udpx_attr.c:   struct fi_info udpx_info;
udpx_attr.c:   struct fi_rx_attr udpx_rx_attr;
udpx_attr.c:   struct fi_tx_attr udpx_tx_attr;
udpx_domain.c:   static struct fi_ops udpx_domain_fi_ops;
udpx_domain.c:   static struct fi_ops_domain udpx_domain_ops;
udpx_ep.c:   static struct fi_ops_cm udpx_cm_ops;
udpx_ep.c:   static struct fi_ops udpx_ep_fi_ops;
udpx_ep.c:   static struct fi_ops_ep udpx_ep_ops;
udpx_ep.c:   static struct fi_ops_msg udpx_msg_ops;
udpx_fabric.c:   static struct fi_ops udpx_fabric_fi_ops;
udpx_fabric.c:   static struct fi_ops_fabric udpx_fabric_ops;
udpx_init.c:   struct fi_provider udpx_prov;
util_av.c:   static struct fi_ops ip_av_fi_ops;
util_av.c:   static struct fi_ops_av ip_av_ops;
util_cq.c:   static struct fi_ops util_cq_fi_ops;
util_cq.c:   static struct fi_ops_cq util_cq_ops;
util_domain.c:   static struct fi_ops_mr util_domain_mr_ops;
util_eq.c:   static struct fi_ops util_eq_fi_ops;
util_eq.c:   static struct fi_ops_eq util_eq_ops;
util_main.c:   static struct dlist_entry fabric_list;
util_main.c:   static pthread_spinlock_t lock;
util_poll.c:   static struct fi_ops util_poll_fi_ops;
util_poll.c:   static struct fi_ops_poll util_poll_ops;
util_wait.c:   static struct fi_ops util_wait_fd_fi_ops;
util_wait.c:   static struct fi_ops_wait util_wait_fd_ops;
psiginfo-define.h:   static const uint8_t codes_11[2];
psiginfo-define.h:   static const uint8_t codes_17[6];
psiginfo-define.h:   static const uint8_t codes_29[6];
psiginfo-define.h:   static const uint8_t codes_4[8];
psiginfo-define.h:   static const uint8_t codes_5[2];
psiginfo-define.h:   static const uint8_t codes_7[3];
psiginfo-define.h:   static const uint8_t codes_8[8];
psiginfo-define.h:   static const union codestrs_t_11 codestrs_11;
psiginfo-define.h:   static const union codestrs_t_17 codestrs_17;
psiginfo-define.h:   static const union codestrs_t_29 codestrs_29;
psiginfo-define.h:   static const union codestrs_t_4 codestrs_4;
psiginfo-define.h:   static const union codestrs_t_5 codestrs_5;
psiginfo-define.h:   static const union codestrs_t_7 codestrs_7;
psiginfo-define.h:   static const union codestrs_t_8 codestrs_8;
pthread_attr_getstackaddr.c:   static const char __evoke_link_warning_pthread_attr_getstackaddr[82];
pthread_attr_init.c:   struct pthread_attr *__attr_list;
pthread_attr_init.c:   int __attr_list_lock;
pthread_attr_setstackaddr.c:   static const char __evoke_link_warning_pthread_attr_setstackaddr[82];
pthread_barrier_init.c:   static const struct pthread_barrierattr default_barrierattr;
pthread_create.c:   unsigned int __nptl_nthreads;
pthread_create.c:   int __pthread_debug;
pthread_create.c:   static struct pthread *__nptl_last_event;
pthread_create.c:   static td_thr_events_t __nptl_threads_events;
pthread_mutex_init.c:   static const struct pthread_mutexattr default_mutexattr;
pthread_once.c:   unsigned long __fork_generation;
pthread_rwlock_init.c:   static const struct pthread_rwlockattr default_rwlockattr;
pthread_setconcurrency.c:   int __concurrency_level;
random.c:   static __libc_lock_t lock;
random.c:   static int32_t randtbl[32];
random.c:   static struct random_data unsafe_state;
random_r.c:   static const struct random_poly_info random_poly_info;
rcmd.c:   int __check_rhosts_file;
rcmd.c:   char *__rcmd_errstr;
rcmd.c:   static char *ahostbuf;
reg-modifier.c:   struct printf_modifier_record **__printf_modifier_table;
reg-modifier.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
reg-modifier.c:   static __libc_lock_t lock;
reg-modifier.c:   static int next_bit;
reg-printf.c:   printf_arginfo_size_function **__printf_arginfo_table;
reg-printf.c:   printf_function **__printf_function_table;
reg-printf.c:   static __libc_lock_t lock;
reg-type.c:   printf_va_arg_function **__printf_va_arg_table;
reg-type.c:   static __libc_lock_t lock;
reg-type.c:   static int pa_next_type;
regcomp.c:   const char __re_error_msgid[369];
regcomp.c:   const size_t __re_error_msgid_idx[17];
regcomp.c:   reg_syntax_t re_syntax_options;
regcomp.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
regcomp.c:   static struct re_pattern_buffer re_comp_buf;
regcomp.c:   static const bitset_word_t utf8_sb_map[4];
regex.c:   int re_max_failures;
regex.c:   static const char __evoke_link_warning_re_max_failures[61];
regexp.c:   char *loc1;
regexp.c:   char *loc2;
regexp.c:   char *locs;
register-atfork.c:   struct fork_handler *__fork_handlers;
register-atfork.c:   int __fork_lock;
register-atfork.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
register-atfork.c:   static struct fork_handler_pool fork_handler_pool;
res_hconf.c:   struct hconf _res_hconf;
res_hconf.c:   static const struct cmd cmd[7];
res_hconf.c:   static struct netaddr *ifaddrs;
res_init.c:   unsigned long long __res_initstamp;
res_init.c:   static const void *__elf_set___libc_subfreeres_element_res_thread_freeres__;
res_init.c:   static const void *__elf_set___libc_thread_subfreeres_element_res_thread_freeres__;
res_init.c:   static const char sort_mask_chars[3];
res_libc.c:   struct __res_state *__libc_resp;
res_libc.c:   struct __res_state *__resp;
res_libc.c:   struct __res_state _res;
res_libc.c:   static __libc_lock_t lock;
rexec.c:   int rexecoptions;
rexec.c:   static char *ahostbuf;
rpc_common.c:   struct opaque_auth __GI__null_auth;
rpc_common.c:   struct opaque_auth _null_auth;
rpc_common.c:   struct rpc_createerr rpc_createerr;
rpc_common.c:   fd_set svc_fdset;
rpc_common.c:   int svc_max_pollfd;
rpc_common.c:   struct pollfd *svc_pollfd;
rpc_prot.c:   static const struct xdr_discrim reply_dscrm[3];
rpc_thread.c:   static const void *__elf_set___libc_subfreeres_element___rpc_thread_destroy__;
rpc_thread.c:   static const void *__elf_set___libc_thread_subfreeres_element___rpc_thread_destroy__;
rpc_thread.c:   static struct rpc_thread_variables __libc_tsd_RPC_VARS_mem;
rpc_thread.c:   static struct rpc_thread_variables *thread_rpc_vars;
rtld.c:   char **__GI__dl_argv;
rtld.c:   uintptr_t __pointer_chk_guard_local;
rtld.c:   int _dl_argc;
rtld.c:   char **_dl_argv;
rtld.c:   unsigned int _dl_skip_args;
rtld.c:   struct rtld_global _rtld_global;
rtld.c:   struct rtld_global_ro _rtld_global_ro;
rtld.c:   struct rtld_global _rtld_local;
rtld.c:   struct rtld_global_ro _rtld_local_ro;
rtld.c:   static struct libname_list _dl_rtld_libname;
rtld.c:   static struct libname_list _dl_rtld_libname2;
rtld.c:   static int any_debug;
rtld.c:   static struct audit_list *audit_list;
rtld.c:   static const char *library_path;
rtld.c:   static hp_timing_t load_time;
rtld.c:   static const char *preloadlist;
rtld.c:   static hp_timing_t relocate_time;
rtld.c:   static hp_timing_t start_time;
rtld.c:   static _Bool tls_init_tp_called;
rtld.c:   static int version_info;
runtime-pmi.c:   static char *kvs_key;
runtime-pmi.c:   static char *kvs_name;
runtime-pmi.c:   static char *kvs_value;
runtime-pmi.c:   static int max_key_len;
runtime-pmi.c:   static int max_name_len;
runtime-pmi.c:   static int max_val_len;
runtime-pmi.c:   static int rank;
runtime-pmi.c:   static int size;
ruserpass.c:   static FILE *cfile;
ruserpass.c:   static const char tokstr[53];
ruserpass.c:   static const struct toktab toktab[7];
ruserpass.c:   static char tokval[100];
sem_close.c:   static struct inuse_sem *rec;
sem_close.c:   static sem_t *the_sem;
sem_open.c:   void *__sem_mappings;
sem_open.c:   int __sem_mappings_lock;
setenv.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
setenv.c:   static __libc_lock_t envlock;
setenv.c:   static void *known_values;
setenv.c:   static char **last_environ;
setlocale.c:   __libc_rwlock_t __libc_setlocale_lock;
setlocale.c:   const uint8_t _nl_category_name_idxs[13];
setlocale.c:   const uint8_t _nl_category_name_sizes[13];
setlocale.c:   const union catnamestr_t _nl_category_names;
setlocale.c:   static void (* const_nl_category_postload[13])(void);
sgetsgent.c:   static __libc_lock_t lock;
sgetspent.c:   static __libc_lock_t lock;
simple_pmi.c:   static int PMI_debug;
simple_pmi.c:   static const int PMI_debug_init;
simple_pmi.c:   static int PMI_fd;
simple_pmi.c:   static PMIState PMI_initialized;
simple_pmi.c:   static int PMI_keylen_max;
simple_pmi.c:   static int PMI_kvsname_max;
simple_pmi.c:   static int PMI_rank;
simple_pmi.c:   static int PMI_size;
simple_pmi.c:   static int PMI_spawned;
simple_pmi.c:   static int PMI_totalview;
simple_pmi.c:   static int PMI_vallen_max;
simple_pmi.c:   static char cached_singinit_key[1024];
simple_pmi.c:   static char cached_singinit_val[1024];
simple_pmi.c:   static char singinit_kvsname[256];
simple_pmiutil.c:   static struct PMIU_keyval_pairs PMIU_keyval_tab[64];
simple_pmiutil.c:   static int PMIU_keyval_tab_idx;
simple_pmiutil.c:   static char PMIU_print_id[32];
sofini.c:   static const ui32 __FRAME_END__[1];
common.c:   static const size_t fi_datatype_size_table[14];
fabric.c:   struct fi_provider core_prov;
fabric.c:   int init;
fabric.c:   static const char * consterrstr[11];
fabric.c:   static pthread_mutex_t ini_lock;
fabric.c:   static struct fi_filter prov_filter;
fabric.c:   static struct fi_prov *prov_head;
fabric.c:   static struct fi_prov *prov_tail;
log.c:   uint64_t log_mask;
log.c:   struct fi_filter prov_log_filter;
log.c:   static const char * constlog_levels[5];
log.c:   static const char * constlog_subsys[10];
var.c:   static struct dlist_entry param_list;
stdfiles.c:   struct _IO_FILE_plus _IO_2_1_stderr_;
stdfiles.c:   struct _IO_FILE_plus _IO_2_1_stdin_;
stdfiles.c:   struct _IO_FILE_plus _IO_2_1_stdout_;
stdfiles.c:   struct _IO_FILE_plus *_IO_list_all;
stdfiles.c:   struct _IO_FILE_plus *__GI__IO_list_all;
stdfiles.c:   static _IO_lock_t _IO_stdfile_0_lock;
stdfiles.c:   static _IO_lock_t _IO_stdfile_1_lock;
stdfiles.c:   static _IO_lock_t _IO_stdfile_2_lock;
stdfiles.c:   static struct _IO_wide_data _IO_wide_data_0;
stdfiles.c:   static struct _IO_wide_data _IO_wide_data_1;
stdfiles.c:   static struct _IO_wide_data _IO_wide_data_2;
stdio.c:   struct _IO_FILE *_IO_stderr;
stdio.c:   struct _IO_FILE *_IO_stdin;
stdio.c:   struct _IO_FILE *_IO_stdout;
stdio.c:   _IO_FILE *stderr;
stdio.c:   _IO_FILE *stdin;
stdio.c:   _IO_FILE *stdout;
strerror.c:   static char *buf;
strerror_l.c:   static const void *__elf_set___libc_subfreeres_element_strerror_thread_freeres__;
strerror_l.c:   static const void *__elf_set___libc_thread_subfreeres_element_strerror_thread_freeres__;
strerror_l.c:   static char *last_value;
strops.c:   const struct _IO_jump_t _IO_str_jumps;
strsignal.c:   static __libc_key_t key;
strsignal.c:   static char local_buf[100];
strsignal.c:   static char *static_buf;
svc_auth.c:   static const struct {
svc_auth.c:       enum auth_stat (*authenticator)(struct svc_req *, struct rpc_msg *);
svc_auth.c:   } svcauthsw[4];
svc_raw.c:   static const struct xp_ops server_ops;
svc_tcp.c:   static const struct xp_ops svctcp_op;
svc_tcp.c:   static const struct xp_ops svctcp_rendezvous_op;
svc_udp.c:   static const struct xp_ops svcudp_op;
svc_unix.c:   static struct cmessage cm;
svc_unix.c:   static const struct xp_ops svcunix_op;
svc_unix.c:   static const struct xp_ops svcunix_rendezvous_op;
svcauth_des.c:   struct {
svcauth_des.c:       u_long ncachehits;
svcauth_des.c:       u_long ncachereplays;
svcauth_des.c:       u_long ncachemisses;
svcauth_des.c:   } svcauthdes_stats;
symmetric_heap_c.c:   static char *shmem_internal_heap_curr;
symmetric_heap_c.c:   static int shmem_internal_use_malloc;
tempnam.c:   static const char __evoke_link_warning_tempnam[56];
tens_in_limb.c:   const mp_limb_t _tens_in_limb[20];
tmpnam.c:   static const char __evoke_link_warning_tmpnam[55];
tmpnam.c:   static char tmpnam_buffer[20];
tmpnam_r.c:   static const char __evoke_link_warning_tmpnam_r[57];
tpp.c:   int __sched_fifo_max_prio;
tpp.c:   int __sched_fifo_min_prio;
transport_ofi.c:   size_t SHMEM_Dtsize[14];
transport_ofi.c:   fi_addr_t *addr_table;
transport_ofi.c:   int shmem_transport_have_long_double;
transport_ofi.c:   size_t shmem_transport_ofi_addrlen;
transport_ofi.c:   struct fid_av *shmem_transport_ofi_avfd;
transport_ofi.c:   size_t shmem_transport_ofi_bounce_buffer_size;
transport_ofi.c:   shmem_free_list_t *shmem_transport_ofi_bounce_buffers;
transport_ofi.c:   struct fid_ep *shmem_transport_ofi_cntr_epfd;
transport_ofi.c:   struct fid_domain *shmem_transport_ofi_domainfd;
transport_ofi.c:   struct fid_ep *shmem_transport_ofi_epfd;
transport_ofi.c:   struct fid_fabric *shmem_transport_ofi_fabfd;
transport_ofi.c:   struct fid_cntr *shmem_transport_ofi_get_cntrfd;
transport_ofi.c:   size_t shmem_transport_ofi_max_atomic_size;
transport_ofi.c:   size_t shmem_transport_ofi_max_buffered_send;
transport_ofi.c:   size_t shmem_transport_ofi_max_msg_size;
transport_ofi.c:   uint64_t shmem_transport_ofi_max_poll;
transport_ofi.c:   uint64_t shmem_transport_ofi_pending_cq_count;
transport_ofi.c:   uint64_t shmem_transport_ofi_pending_get_counter;
transport_ofi.c:   uint64_t shmem_transport_ofi_pending_put_counter;
transport_ofi.c:   struct fid_cntr *shmem_transport_ofi_put_cntrfd;
transport_ofi.c:   struct fid_cq *shmem_transport_ofi_put_nb_cqfd;
transport_ofi.c:   struct fid_stx *shmem_transport_ofi_stx;
transport_ofi.c:   struct fid_cntr *shmem_transport_ofi_target_cntrfd;
transport_ofi.c:   struct fid_mr *shmem_transport_ofi_target_data_mrfd;
transport_ofi.c:   struct fid_mr *shmem_transport_ofi_target_heap_mrfd;
transport_ofi.c:   static int AMO_EXTENDED_OPS[1];
transport_ofi.c:   static int AMO_STANDARD_OPS[1];
transport_ofi.c:   static int COMPARE_AMO_STANDARD_OPS[1];
transport_ofi.c:   static int DT_AMO_EXTENDED[8];
transport_ofi.c:   static int DT_AMO_STANDARD[5];
transport_ofi.c:   static int DT_INTERNAL_REQ[1];
transport_ofi.c:   static int DT_REDUCE_ARITH[10];
transport_ofi.c:   static int DT_REDUCE_BITWISE[6];
transport_ofi.c:   static int DT_REDUCE_COMPARE[8];
transport_ofi.c:   static int FETCH_AMO_EXTENDED_OPS[2];
transport_ofi.c:   static int FETCH_AMO_STANDARD_OPS[1];
transport_ofi.c:   static int INTERNAL_REQ_OPS[1];
transport_ofi.c:   static int REDUCE_ARITH_OPS[2];
transport_ofi.c:   static int REDUCE_BITWISE_OPS[3];
transport_ofi.c:   static int REDUCE_COMPARE_OPS[2];
transport_ofi.c:   static char *SHMEM_DtName[14];
transport_ofi.c:   static char *SHMEM_OpName[19];
transport_ofi.c:   static const size_t shmem_transport_ofi_queue_slots;
tzfile.c:   int __use_tzfile;
tzfile.c:   static struct leap *leaps;
tzfile.c:   static size_t num_leaps;
tzfile.c:   static size_t num_transitions;
tzfile.c:   static size_t num_types;
tzfile.c:   static long rule_dstoff;
tzfile.c:   static long rule_stdoff;
tzfile.c:   static time_t *transitions;
tzfile.c:   static unsigned char *type_idxs;
tzfile.c:   static struct ttinfo *types;
tzfile.c:   static dev_t tzfile_dev;
tzfile.c:   static ino64_t tzfile_ino;
tzfile.c:   static time_t tzfile_mtime;
tzfile.c:   static char *tzspec;
tzfile.c:   static char *zone_names;
tzset.c:   int __daylight;
tzset.c:   long __timezone;
tzset.c:   char *__tzname[2];
tzset.c:   size_t __tzname_cur_max;
tzset.c:   int daylight;
tzset.c:   long timezone;
tzset.c:   char *tzname[2];
tzset.c:   static const void *__elf_set___libc_subfreeres_element_free_mem__;
tzset.c:   static char *old_tz;
tzset.c:   static tz_rule tz_rules[2];
tzset.c:   static __libc_lock_t tzset_lock;
tzset.c:   static struct tzstring_l *tzstring_list;
utmpname.c:   const char *__libc_utmp_file_name;
utmpname.c:   static const char default_file_name[14];
valid_field.c:   const char __nss_invalid_field_characters[3];
valid_list_field.c:   static const char invalid_characters[4];
vars.c:   struct pthread_key_struct __GI___pthread_keys[1024];
vars.c:   struct pthread_attr __default_pthread_attr;
vars.c:   int __default_pthread_attr_lock;
vars.c:   int __is_smp;
vars.c:   struct pthread_key_struct __pthread_keys[1024];
vars.c:   int __pthread_multiple_threads;
version.c:   static const char __libc_release[7];
version.c:   static const char __libc_version[5];
version.c:   static const char banner[642];
vfprintf.c:   static const struct _IO_jump_t _IO_helper_jumps;
vfprintf.c:   static const uint8_t jump_table[91];
vfprintf.c:   static const char null[7];
vsnprintf.c:   const struct _IO_jump_t _IO_strn_jumps;
vsprintf_chk.c:   static const struct _IO_jump_t _IO_str_chk_jumps;
vswprintf.c:   const struct _IO_jump_t _IO_wstrn_jumps;
wcrtomb.c:   static mbstate_t state;
wcsmbsload.c:   const struct gconv_fcts __wcsmbs_gconv_fcts_c;
wcsmbsload.c:   static const struct __gconv_step to_mb;
wcsmbsload.c:   static const struct __gconv_step to_wc;
wcsnrtombs.c:   static mbstate_t state;
wcsrtombs.c:   static mbstate_t state;
wctomb.c:   mbstate_t __wctomb_state;
wfileops.c:   const struct _IO_jump_t _IO_wfile_jumps;
wfileops.c:   const struct _IO_jump_t _IO_wfile_jumps_maybe_mmap;
wfileops.c:   const struct _IO_jump_t _IO_wfile_jumps_mmap;
wfileops.c:   const struct _IO_jump_t __GI__IO_wfile_jumps;
wmemstream.c:   static const struct _IO_jump_t _IO_wmem_jumps;
wstrops.c:   const struct _IO_jump_t _IO_wstr_jumps;
xcrypt.c:   static const char hex[16];
xdr.c:   static const char xdr_zero[4];
xdr_mem.c:   static const struct xdr_ops xdrmem_ops;
xdr_rec.c:   static const struct xdr_ops xdrrec_ops;
xdr_stdio.c:   static const struct xdr_ops xdrstdio_ops;
xlocale.c:   const struct __locale_struct _nl_C_locobj;
