Portals SHMEM
-------------

* About

Portals SHMEM is an implementation of the OpenSHMEM 1.0 standard over
Portals 4.0 and XPMEM.  The implementation is complete, although
performance tuning is still a work in progress.


* Building

Portals SHMEM implementation utilizes the Autoconf/Automake/Libtool
build system.  The standard GNU configure script ane makd system is
used to build OpenSHMEM Over Portals 4.  To build:

  % ./configure <options>
  % make
  % make check
  % make install

The "make check" step is not strictly necessary, but is a good idea.

Options to configure include:

  --prefix=<DIR>          Install implementation in <DIR>, default: /usr/local
  --with-portals4=<DIR>   Find the Portals 4 library in <DIR>
  --with-xpmem=<DIR>      Find the XPMEM library in <DIR>
  --with-pmi=DIR          Location of PMI installation.  Configure will 
                          automatically look for the PMI runtime provided by
                          the Portals 4 reference implementation

There are many other options to configure to influence performance and
behavior.  See 'configure --help' for documentation on available
options.

* SHMEM Runtime Support

  Environment variables:

    SMA_VERSION: if defined, print SHMEM version during start_pes().

    SMA_INFO: if defined, print (stdout) SHMEM environment variables.

    SMA_SYMMETRIC_SIZE (default 64 MiB)
        The allocated size of the symmetric heap which shmalloc() and shfree()
        operates on. The size value can be scaled with a suffix of
            'K' for kilobytes (B * 1024),
            'M' for Megabytes (KiB * 1024)
            'G' for Gigabytes (MiB * 1024)

    SMA_BOUNCE_SIZE (default 2 KiB)
        The maximum size of a bounce buffer for put messages.
        Messages greater than the immediate send value for the
        underlying network but greater than this threshold will be
        copied into a bounce buffer and then sent.

    SHMEM_COLL_CROSSOVER (default 4)
        For num_pes < SHMEM_COLL_THRESHOLD, collective algorithms are
        serial instead of tree based.

    SMA_COLL_RADIX (default 4)
        Controls the width of the n-ary tree for collectives, such that each
        node will fanout-send to a max of approximately SMA_COLL_RADIX

    SMA_SYMMETRIC_HEAP_USE_MALLOC (default 0)
        If set to a non-zero integer, will use malloc() instead of
        mmap() to allocate the symmetric heap.
